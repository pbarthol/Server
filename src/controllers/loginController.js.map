{"version":3,"file":"loginController.js","sourceRoot":"","sources":["../src/controllers/loginController.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH,IAAO,IAAI,WAAW,gBAAgB,CAAC,CAAC;AACxC,IAAO,GAAG,WAAY,cAAc,CAAC,CAAC;AACtC,IAAO,MAAM,WAAW,oBAAoB,CAAC,CAAC;AAE9C,eAAsB,GAAG,EAAE,GAAG;IAC1B,IAAI,CAAC,OAAO,CAAC,EAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAE,UAAS,GAAG,EAAE,IAAI;QAC1D,EAAE,CAAC,CAAC,GAAG,CAAC;YAAC,MAAM,GAAG,CAAC;QACnB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAA,CAAC;YACN,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,uCAAuC,EAAC,CAAC,CAAC;QAClF,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,QAAM,GAAG,IAAI,CAAC,GAAG,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAE,OAAO;gBACzD,EAAE,CAAA,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjB,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE;wBACtC,SAAS,EAAE,KAAK,CAAC,sBAAsB;qBAC1C,CAAC,CAAC;oBACH,GAAG,CAAC,IAAI,CAAC;wBACL,OAAO,EAAE,IAAI;wBACb,OAAO,EAAE,mBAAmB;wBAC5B,KAAK,EAAE,KAAK;wBACZ,MAAM,EAAE,QAAM;qBACjB,CAAC,CAAC;gBAGP,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,uCAAuC,EAAC,CAAC,CAAC;gBAClF,CAAC;YACL,CAAC,CAAC,CAAA;QACN,CAAC;IACL,CAAC,CAAC,CAAA;AAAA,CAAC;AA3BS,aAAK,QA2Bd,CAAA","sourcesContent":["/**\n * Created by Peter on 20.11.2016.\n */\n\nimport User = require('../models/user');\nimport jwt  = require('jsonwebtoken');\nimport config = require('../config/database');\n\nexport function login(req, res) {\n    User.findOne({username: req.body.username}, function(err, user){\n        if (err) throw err;\n        if(!user){\n            return res.status(403).send({error: 'Authenticaton failed, user not found.'});\n        }\n        else {\n            let userid = user._id;\n            user.comparePassword(req.body.password, function(err, isMatch){\n                if(isMatch && !err) {\n                    var token = jwt.sign(user, config.secret, {\n                        expiresIn: \"24h\" // expires in 24 hours\n                    });\n                    res.json({\n                        success: true,\n                        message: 'Enjoy your token!',\n                        token: token,\n                        userid: userid\n                    });\n                    // var token = jwt.encode(user, config.secret);\n                    // res.json({success: true, token: token});\n                }\n                else {\n                    return res.status(403).send({error: 'Authenticaton failed, wrong password.'});\n                }\n            })\n        }\n    })}"]}