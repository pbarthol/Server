{"version":3,"file":"userController.js","sourceRoot":"","sources":["../src/controllers/userController.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by Peter on 16.10.2016.\n */\n\n\"use strict\";\nimport bcrypt = require('bcryptjs');\nimport crypto = require('crypto');\n// import crypto = require('crypto');\n// import mongoose = require('mongoose');\nimport mongoose = require('mongoose');\nimport User     = require(\"../models/user\");\nimport moment \t= require('moment');\nimport jwt  = require('jsonwebtoken');\nimport config = require('../config/database');\nimport fs = require('fs');\nimport Upload = require(\"../models/upload\");\nlet ObjectId = mongoose.Types.ObjectId;\n\nexport function getUser(req, res)\n{\n    console.log('get User Request');\n    var id = req.params.id;\n    console.log(typeof(id));\n    console.log(\"User Id: \" + id);\n    var idObj = ObjectId(id);\n    console.log(typeof(id));\n    console.log(\"User Id: \" + id.valueOf());\n    User.findById(idObj, function (err, doc) {\n        if (err) {\n            // return res.send('Error');\n            console.log(err);\n            // return next(err);\n        }\n        if (doc) {\n            let user = doc;\n            console.log(\"User found\");\n            res.json(user);\n            console.log(user);\n        }\n        else {\n            console.log(\"No found\");\n            console.log(doc);\n        }\n    });\n}\n\nexport function changePassword(req, res) {\n    // var newUser = req.body.user;\n    console.log(req.body);\n    console.log(req.body.pwdModel);\n    var pwdModel = req.body.pwdModel;\n    var idObj = ObjectId(pwdModel.userid);\n    User.findById(idObj, function (err, user) {\n        if (err) throw err;\n        console.log(\"Username: \"+req.body.username);\n        if(!user){\n            return res.status(403).send({error: 'Authenticaton failed, user not found.'});\n        }\n        else {\n            console.log(\"Password: \"+ req.body.password);\n            console.log(\"UserId: \"+ user.userid);\n            user.comparePassword(pwdModel.oldpwd, function(err, isMatch){\n                if(isMatch && !err) {\n                    // save new Password\n                    user.password = pwdModel.newpwd;\n                    user.save(function (err, user) {\n                        if (err) {\n                            console.log(err);\n                            // return res.status(500).send({success: false, msg: 'User save() failed.'});\n                            return res.status(500).send({error: 'User changePassword() failed.'});\n                        }\n                        return res.json(user);\n                    })\n                }\n                else {\n                    return res.status(403).send({error: 'Authenticaton failed, wrong old password.'});\n                }\n            })\n        }\n    })}\n\nexport function addUser(req, res) {\n    // var newUser = req.body.user;\n    console.log(req.body);\n    console.log(req.body.user);\n    var newUser = new User(req.body.user);\n    console.log(newUser);\n    User.findOne({username: newUser.username}, function (err, user) {\n        if (err) {\n            console.log(err);\n            // return res.status(500).send({success: false, msg: 'Error at search the user.'});\n            return res.status(500).send({error: 'Error at search the user.'});\n        }\n        if (user) {\n            console.log('username already taken');\n            // return res.status(500).send({success: false, msg: 'Username already taken.'});\n            return res.status(500).send({error: 'Username already taken.'});\n        }\n        else {\n            User.findOne({email: newUser.email}, function (err, user) {\n                if (err) {\n                    console.log(err);\n                }\n                if (user) {\n                    console.log('email already taken');\n                    // return res.status(500).send({success: false, msg: 'Email already taken.'});\n                    return res.status(500).send({error: 'Email already taken.'});\n                }\n                else {\n                    saltAndHash(newUser.password, function (hash) {\n                        newUser.password = hash;\n                        // append date stamp when record was created //\n                        newUser.createddate = moment().format();\n                        newUser._id = ObjectId();\n                        newUser.save(function (err, user) {\n                            if (err) {\n                                console.log(err);\n                                // return res.status(500).send({success: false, msg: 'User save() failed.'});\n                                return res.status(500).send({error: 'User save() failed.'});\n                            }\n                            return res.json(user);\n                        })\n                    })\n                }\n            })\n        }\n    })\n}\n\nvar generateSalt = function()\n{\n    var set = '0123456789abcdefghijklmnopqurstuvwxyzABCDEFGHIJKLMNOPQURSTUVWXYZ';\n    var salt = '';\n    for (var i = 0; i < 10; i++) {\n        var p = Math.floor(Math.random() * set.length);\n        salt += set[p];\n    }\n    return salt;\n}\n\nvar saltAndHash = function(password, callback)\n{\n    var salt = generateSalt();\n    callback(salt + md5(password + salt));\n}\n\nvar md5 = function(str) {\n    return crypto.createHash('md5').update(str).digest('hex');\n    // return bcrypt.createHash('md5').update(str).digest('hex');\n}\n\nvar validatePassword = function(plainPass, hashedPass, callback)\n{\n    var salt = hashedPass.substr(0, 10);\n    var validHash = salt + md5(plainPass + salt);\n    callback(null, hashedPass === validHash);\n}"]}