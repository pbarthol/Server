{"version":3,"file":"bookingController.js","sourceRoot":"","sources":["../src/controllers/bookingController.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by Peter on 06.12.2016.\n */\nimport mongoose = require('mongoose');\nimport Booking     = require(\"../models/booking\");\nimport moment \t= require('moment');\nlet ObjectId = mongoose.Types.ObjectId;\n\n\nexport function addBooking(req, res) {\n    console.log(req.body);\n    console.log(req.body.booking);\n    var booking = req.body.booking;\n    var newBooking = new Booking();\n    newBooking.userid = booking.user_id;\n    newBooking.accommodationid = booking.accommodation_id;\n    newBooking.datefrom= booking.from_date;\n    newBooking.dateto = booking.to_date;\n\n    console.log(newBooking);\n    Booking.findOne({userid: newBooking.user_id,\n        accommodationid: newBooking.accommodation_id,\n        datefrom: newBooking.from_date,\n        dateto: newBooking.to_date}, function (err, booking) {\n        if (err) {\n            console.log(err);\n            // return res.status(500).send({success: false, msg: 'Error at search the booking.'});\n            return res.status(500).send({error: 'Error at search the booking.'});\n        }\n        if (!booking) {\n            // append date stamp when record was created //\n            newBooking.createddate = moment().format();\n            newBooking._id = ObjectId();\n            newBooking.save(function (err, booking) {\n                if (err) {\n                    console.log(err);\n                    // return res.status(500).send({success: false, msg: 'Booking save() failed.'});\n                    return res.status(500).send({error: 'Booking save() failed.'});\n                }\n                return res.json(booking);\n            })\n        }\n        else {\n            console.log('The accommodation is already booked for this user.');\n            // return res.status(500).send({success: false, msg: 'The accommodation is already booked for this user'});\n            return res.status(500).send({error: 'The accommodation is already booked for this user.'});\n        }\n\n    })\n}\n\nexport function getBooking(req, res)\n{\n    console.log('get Booking Request');\n    var id = req.params.id;\n    var idObj = ObjectId(id);\n    // console.log(typeof(id));\n    // console.log(\"Booking Id: \" + id.valueOf());\n    Booking.findById(idObj, function (err, doc) {\n        if (err) {\n            // return res.send('Error');\n            console.log(err);\n            // return next(err);\n        }\n        if (doc) {\n            let booking = doc;\n            console.log(\"Booking found\");\n            res.json(booking);\n            console.log(booking);\n        }\n        else {\n            console.log(\"No found\");\n            console.log(doc);\n        }\n    });\n}\n\n\nexport function getAllBookings(req, res)\n{\n    Booking.find(function (err, bookings) {\n        if (err) {\n            return res.status(500).send({error: 'Failure in getAllBookings.'});\n        }\n        if (bookings) {\n            return res.json(bookings);\n        }\n    });\n}\n\n\nexport function getBookingsForUser(req, res)\n{\n    console.log('get Booking Request');\n    var userid = req.params.id;\n    Booking.find({userid: userid}, function (err, bookings) {\n        if (err) {\n            return res.status(500).send({error: 'Failure in getBookingsForUser.'});\n        }\n        if (bookings) {\n            return res.json(bookings);\n        }\n    });\n}\n"]}